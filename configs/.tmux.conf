#
# Global user options
#

# @todo convert to aliases! tmux log-info, d-info, etc.
set -g @log.debug "#[fg=cyan,italics] [debug]#[default]#[italics]"
set -g @log.info "#[fg=green,italics] [info]#[default]#[italics]"
set -g @log.warn "#[fg=yellow,italics] [warn]#[default]#[italics]"
set -g @log.error "#[fg=red,italics] [error]#[default]#[italics]"

set -g @c-inactive "colour239"
set -g @c-active "green"
set -g @c-prefix "yellow"

#
# Global options
#

# @todo doesn't work unless started from a tmux session -- but screen-256color
# breaks italics
#
# https://gist.github.com/andyfowler/1195581
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

set -g history-limit 10000
set -g mouse on
set -g set-clipboard on # @todo get it working so we can start using copy-mode
set -g focus-events on
set -g monitor-activity on
set -g monitor-bell on
# set -g visual-activity off
# set -g visual-bell on
set -g display-time 1500

set -g display-panes-time 3000
set -gF display-panes-active-colour "#{@c-active}"
set -gF display-panes-colour "#{@c-inactive}"

# Start windows at 1 and renumber them when one is closed so they always appear
# contiguous in the status line.
set -g base-index 1
set -g renumber-windows on
set -g set-titles on
# Enable automatic renaming of windows so their running programs will appear in
# the status line.
set -g automatic-rename on
# Disable pane title renaming--which also sets the terminal title--so that
# window managers can expect the terminal application to have a static title.
set -g allow-rename off

# Keep sessions when no clients are attached so we can reconnect later. This is
# useful for clients that get disconnected due to network issues.
set -g destroy-unattached off

# If the client's session is destroyed, only detach them if it was the only
# session or if all other sessions have attached clients. Otherwise, switch the
# client to the most recent unattached session (by activity).
set -g detach-on-destroy no-detached

set -g mode-keys vi

# Reduce escape time because we don't use that key for functions or meta key
# sequences, and it controls the delay for closing menus.
set -g escape-time 0

# set -g pane-border-lines single
# set -g pane-border-status off

#
# Global key bindings
#

# if-shell "test -f $HOME/.config/dotfiles/configs/tmux_launcher.sh" {
#     bind -n -N 'Open the shortcut launcher' \
#         C-space run '$HOME/.config/dotfiles/configs/tmux_launcher.sh TSpaceMux'
# } {
#     display 'tmux launcher config not found'
# }

# - define menus as env vars from tmux conf files
# - core menus can live in launcher/core.tmux
# - bind root menu via something like:
# @todo possibly use TSpaceMux as static title and put colored entry first
# with submenu name and sep

if-shell "test -f $XDG_CONFIG_HOME/dotfiles/configs/launcher.tmux" \
    "source-file $XDG_CONFIG_HOME/dotfiles/configs/launcher.tmux"

bind -n C-k clearhist
bind -n C-h selectp -L
bind -n C-j selectp -D
bind -n C-k selectp -U
bind -n C-l selectp -R
bind -n C-Tab last
bind -n C-S-Tab prev
bind -n C-` lastp
bind -n C-n next
bind -n C-p prev
bind -n C-o rotate

#
# Prefix key bindings
#

set-option -g prefix C-a
set-option -g prefix2 C-b

# Press a again to send the prefix to a nested session.
bind a send-prefix

# hjkl pane traversal
bind Tab last-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Only show the current session in tree choice mode.
#bind w run 'tmux choose-tree -Nwf"##{==:##{session_name},#{session_name}}"'

unbind c; bind c new-window -c "#{pane_current_path}"
unbind '"'; bind '"' split-window -v -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind v; bind v split-window -h -c "#{pane_current_path}"
unbind '%'; bind '%' split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"

# @todo dedupe, hopefully with alias
bind C-l \
    display -d 0 '#{@log.info} Loading config... ' \; \
    popup {
        tmux source-file $HOME/.tmux.conf && \
        echo '[info] Done\n\n... Press <Escape> to close' \
    } \; \
    display '#{@log.info} Config loaded '

bind M-r respawn-pane -k \; display '#{@log.info} Pane restarted'

#
# tmuxline
#
# Below tpm because we need to use options set by tmux plugins.
# @audit nevermind, breaks sysstat
#
# Configured in vimrc. In vim:
# :Tmuxline to preview (must restart vim after making changes to vimrc)
# :TmuxlineSnapshot .tmuxline to save changes
#

source-file $XDG_CONFIG_HOME/dotfiles/configs/tmuxline.tmux

#
# Style overrides
#

# set -g window-status-activity-style 'fg=7'
# set -g window-status-bell-style 'fg=3'

#
# Plugins
#

# Install TPM if it's missing.
# @todo add as a submodule to dotfiles repo so we don't have to manually clone,
# then change tpm install dir to dotfiles
if-shell "test ! -d $HOME/.tmux/plugins/tpm" {
    if-shell "echo '[info] Installing TPM...'; git clone https://github.com/tmux-plugins/tpm $TMUX_PLUGIN_MANAGER_PATH/tpm" {
        if-shell "echo '[info] Installing plugins...'; $TMUX_PLUGIN_MANAGER_PATH/tpm/bin/install_plugins" {
            display -p '[info] Installed plugins'
        } {
            display -p '[error] Failed to install plugin(s)'
        }
    } {
        display -p '[error] Failed to install TPM'
    }
}

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '15'
set -g @continuum-restore 'on'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

# @todo learn this or replace with https://github.com/laktak/extrakto
set -g @plugin 'fcsonline/tmux-thumbs'
run-shell "$TMUX_PLUGIN_MANAGER_PATH/tmux-thumbs/tmux-thumbs.tmux"

# Initialize TPM (keep this line at the very bottom of tmux.conf).
display -p '[info] Loading TPM...'
if-shell "$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm" {
    display -p '[info] TPM loaded'
} {
    display -p '[error] Failed to load TPM'
}
