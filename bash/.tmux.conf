#
# Global options
#

set -g default-terminal "screen-256color"
set -ga terminal-overrides ",screen-256color:Tc"

set -g display-time 2000
set -g history-limit 10000
set -g mouse on
set -g focus-events on
setw -g monitor-activity on
set -g visual-activity on

#
# Window options
#

set -g set-titles on
set -g base-index 1
set -g renumber-windows on
set -g allow-rename off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
setw -g automatic-rename on
setw -g mode-keys vi

#
# Key bindings
#

# Prefix
set-option -g prefix C-a
bind a send-prefix
# bind-key C-a last-window
# bind Tab last-window

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Only show the current session in tree choice mode.
#bind w run 'tmux choose-tree -Nwf"##{==:##{session_name},#{session_name}}"'
# Clear the history buffer.
bind -n C-k clear-history

# fix pane_current_path on new window and splits
unbind c; bind c new-window -c "#{pane_current_path}"
unbind '"'; bind '"' split-window -v -c '#{pane_current_path}'
unbind v; bind v split-window -h -c "#{pane_current_path}"
unbind '%'; bind '%' split-window -h -c "#{pane_current_path}"

# Create new windows in the current directory.
bind c new-window -c "#{pane_current_path}"
# Split pane horizontally. The backslash must be escaped.
bind \\ split-window -h -c "#{pane_current_path}"
# Split pane vertically.
bind - split-window -v -c "#{pane_current_path}"
# Load a config file.
bind C-l source-file "$HOME/.tmux.conf" \; display-message '#{E:"\ueb37"} Config reloaded'
# Kill and respawn a window.
bind C-r respawn-pane -k \; display-message 'Pane restarted'.

#
# tmuxline
#
# Below tpm because we need to use options set by tmux plugins.
# @audit nevermind, breaks sysstat
#
# Configured in vimrc. In vim:
# :Tmuxline to preview (must restart vim after making changes to vimrc)
# :TmuxlineSnapshot .tmuxline to save changes
#

if-shell "test -f $HOME/.tmuxline" "source $HOME/.tmuxline"

#
# Style overrides
#

# set -g window-status-activity-style 'fg=7'
# set -g window-status-bell-style 'fg=3'

# Plugins

if-shell "test ! -d $HOME/.tmux/plugins/tpm" {
    run-shell "git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm"
    run-shell "$HOME/.tmux/plugins/tpm/bin/install_plugins"
}

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'junegunn/tmux-fzf-maccy' # @todo learn it
set -g @plugin 'samoshkin/tmux-plugin-sysstat' # @audit doesn't report accurate data
set -g @sysstat_cpu_view_tmpl '#[fg=#{cpu.color}]#{cpu.pused}'
set -g @sysstat_mem_view_tmpl '#[fg=#{mem.color}]#{mem.pused}'
# set -g @plugin 'jaclu/tmux-menus' # @todo learn it

# Initialize TMUX plugin manager (keep this line at the very bottom of
# tmux.conf)
run "$HOME/.tmux/plugins/tpm/tpm"
